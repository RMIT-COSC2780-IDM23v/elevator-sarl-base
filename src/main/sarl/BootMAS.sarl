/** 
 * Class to boot up a controller 
 */
//package au.edu.rmit.agtgrp.elevatorsim.sarlctrl.controllers

import io.janusproject.Boot
import au.edu.rmit.agtgrp.elevatorsim.sarlctrl.controllers.DummyMultiCarController
import au.edu.rmit.agtgrp.elevatorsim.sarlctrl.controllers.DummySWIMultiCarController

import io.sarl.lang.core.Agent

/** 
 * @author Sebastian Sardina (ssardina@gmail.com)
 * 
 */
class BootMAS {
	// Example how to boot from name string:
	// sarl/Boot.java at 44773331ac7b1e05b870323f0e990b597e0ebfa8 Â· sarl/sarl http://tinyurl.com/ycolmey5
	
	
	def static main(args : String[]) : void {
		Boot.offline = true
		Boot.verboseLevel = 7 //ALL
		var fullyQualifiedAgent : String
		val basePackage = "au.edu.rmit.agtgrp.elevatorsim.sarlctrl.controllers"

		val AGENTS_AVAILABLE : String[] = #["DummySWIMultiCarController", "DummyMultiCarController"]
//		val DEFAULT_CONTROLLER = "DummyMultiCarController"
		val DEFAULT_CONTROLLER = "NONE"
		
		if (args.length == 0) {
			System.out.println(String.format("No controller specified from the available ones %s. 
													Using controler %s:", AGENTS_AVAILABLE.toString, DEFAULT_CONTROLLER))
//			Boot.startJanus(typeof(DummyMultiCarController))
			} 
		else {
			val agentToLaunch : String = args.get(0)
			switch agentToLaunch {
				case 'DummySWIMultiCarController':
					fullyQualifiedAgent = basePackage + ".DummySWIMultiCarController"
				case 'DummyMultiCarController':
					fullyQualifiedAgent = basePackage + ".DummyMultiCarController" 
				default:
				    throw new IllegalArgumentException("Invalid agent to start: " + agentToLaunch)
		   		}
			System.out.println(String.format("Loading SARL controller agent %s", agentToLaunch))
			val type = Class.forName(fullyQualifiedAgent)
			var SARLagent : Class<? extends Agent>
			SARLagent = type.asSubclass(Agent)
			assert SARLagent != null;
			Boot.startJanus(SARLagent)
			
			
//			Boot.startJanus(typeof(PrologSweeperBossAgent))
		}
	}
}